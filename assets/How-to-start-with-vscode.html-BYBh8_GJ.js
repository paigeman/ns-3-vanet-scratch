import{_ as l,a as o,b as r,c as d,d as h,e as p,f as c,g as u,h as g,i as m,j as k,k as v,l as b,m as f,n as y,o as w,p as _,q as A,r as C,s as F,t as x}from"./399165588-7c4a87a0-8132-4cdb-a530-fd1771d72d19-CPrw-Vvz.js";import{_ as S}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as B,a as i,b as t,d as n,e as s,f as V,r as q,o as z}from"./app-DQoRa6X_.js";const j={};function H(E,e){const a=q("RouteLink");return z(),B("div",null,[e[3]||(e[3]=i("h1",{id:"how-to-start-with-visual-studio-code",tabindex:"-1"},[i("a",{class:"header-anchor",href:"#how-to-start-with-visual-studio-code"},[i("span",null,"How to start with Visual Studio Code")])],-1)),i("p",null,[t(a,{to:"/zh/How-to-start-with-vscode_zh_CN.html"},{default:n(()=>e[0]||(e[0]=[s("[中文]")])),_:1}),e[2]||(e[2]=s()),t(a,{to:"/How-to-use-this-repo.html"},{default:n(()=>e[1]||(e[1]=[s("[Next]")])),_:1})]),e[4]||(e[4]=V(`<h2 id="linux-solution" tabindex="-1"><a class="header-anchor" href="#linux-solution"><span>Linux Solution</span></a></h2><h3 id="environment" tabindex="-1"><a class="header-anchor" href="#environment"><span>Environment</span></a></h3><p>Ubuntu 22.04</p><p>Visual Studio Code 1.96.2</p><h3 id="install-the-requirements" tabindex="-1"><a class="header-anchor" href="#install-the-requirements"><span>Install the requirements</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ninja-build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="install-visual-studio-code" tabindex="-1"><a class="header-anchor" href="#install-visual-studio-code"><span>Install Visual Studio Code</span></a></h3><p>Follow the Ref. 2.</p><h3 id="clone-ns-3-project" tabindex="-1"><a class="header-anchor" href="#clone-ns-3-project"><span>Clone ns-3 project</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitlab.com/nsnam/ns-3-dev.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="open-visual-studio-code-and-do-some-configurations" tabindex="-1"><a class="header-anchor" href="#open-visual-studio-code-and-do-some-configurations"><span>Open Visual Studio Code and do some configurations</span></a></h3><p>Install some plugins:</p><p><img src="`+l+'" alt="image" loading="lazy"></p><p><img src="'+o+'" alt="image" loading="lazy"></p><p><img src="'+r+'" alt="image" loading="lazy"></p><p>Open ns-3 project and configure it.</p><p>Press <code>Ctrl+shift+P</code> key and select:</p><p><img src="'+d+'" alt="image" loading="lazy"></p><p>Choose existed kit in your computer:</p><p><img src="'+h+'" alt="image" loading="lazy"></p><p>Then you can see cmake begin to work.</p><p><img src="'+p+'" alt="image" loading="lazy"></p><p>In order to see some output, set the CMAKE_BUILD_TYPE to Debug:</p><p><img src="'+c+'" alt="image" loading="lazy"></p><p>Press <code>Ctrl+shift+P</code> key and select:</p><p><img src="'+u+'" alt="image" loading="lazy"></p><p>In order to build the official examples, set the NS3_EXAMPLES to ON:</p><p><img src="'+g+'" alt="image" loading="lazy"></p><h3 id="build-the-project" tabindex="-1"><a class="header-anchor" href="#build-the-project"><span>Build the project</span></a></h3><p><img src="'+m+'" alt="image" loading="lazy"></p><h3 id="test-ns-3" tabindex="-1"><a class="header-anchor" href="#test-ns-3"><span>Test ns-3</span></a></h3><p>Open <code>examples/tutorial/first.cc</code> , run it.</p><p><img src="'+k+'" alt="image" loading="lazy"></p><p><img src="'+v+'" alt="image" loading="lazy"></p><h3 id="other-configurations" tabindex="-1"><a class="header-anchor" href="#other-configurations"><span>Other configurations</span></a></h3><p>The performance of the original Visual Studio Code C/C++ IntelliSense engine is not very good. We can use the clangd plugin as an alternative.</p><p><img src="'+b+'" alt="image" loading="lazy"></p><p>You also need to ensure that clangd is installed on your system. If not, try:</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clangd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>Then, disable the original Visual Studio Code C/C++ IntelliSense engine:</p><p><img src="'+f+'" alt="image" loading="lazy"></p><p><img src="'+y+'" alt="image" loading="lazy"></p><p>The ns-3 official offers coding styles, you can install some plugins and enable formatting on save:</p><p><img src="'+w+'" alt="image" loading="lazy"></p><p><img src="'+_+'" alt="image" loading="lazy"></p><p><img src="'+A+'" alt="image" loading="lazy"></p><p>However, if both <code>clangd</code> and <code>Clang-Format</code> are installed simultaneously, the formatter may not work properly because there are two formatters. Here, you can select a default formatter:</p><p><img src="'+C+`" alt="image" loading="lazy"></p><h3 id="how-to-pass-environment-variables-and-program-arguments-to-the-program-in-visual-studio-code-while-using-cmake" tabindex="-1"><a class="header-anchor" href="#how-to-pass-environment-variables-and-program-arguments-to-the-program-in-visual-studio-code-while-using-cmake"><span>How to pass environment variables and program arguments to the program in Visual Studio Code while using CMake</span></a></h3><p>Add the following configuration to <code>.vscode/settings.json</code> :</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cmake.debugConfig&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--traceFile=/home/h3c/ns-3-dev/scratch/ns-3-vanet-scratch/area1ns2mobility.tcl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--configFile=/home/h3c/ns-3-dev/scratch/ns-3-vanet-scratch/area1ns2config.tcl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--rsuNum=4&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cmake.environment&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;NS_LOG&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;experiment=debug:VehicleApp=debug:RsuApp=debug&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+F+'" alt="image" loading="lazy"></p><h3 id="how-to-run-or-debug-program" tabindex="-1"><a class="header-anchor" href="#how-to-run-or-debug-program"><span>How to run or debug program</span></a></h3><p><img src="'+x+'" alt="image" loading="lazy"></p><h3 id="references" tabindex="-1"><a class="header-anchor" href="#references"><span>References</span></a></h3><ol><li><a href="https://www.nsnam.org/docs/release/3.42/installation/html/linux.html" target="_blank" rel="noopener noreferrer">4. Linux</a></li><li><a href="https://blog.csdn.net/u010044182/article/details/128977610" target="_blank" rel="noopener noreferrer">Ubuntu 22.04安装Visual Studio Code(VS Code)</a></li><li><a href="https://stackoverflow.com/questions/73328916/how-to-set-cmake-build-configuration-in-vscode" target="_blank" rel="noopener noreferrer">How to set CMake build configuration in VSCode?</a></li><li><a href="https://blog.csdn.net/qq_42764906/article/details/135541847" target="_blank" rel="noopener noreferrer">关于在Vscode安装clangd的教程（分别在linux和windows）[很详细，很细节，很全！]【Windows端：缺少 language enginee的解决方法】</a></li><li><a href="https://www.nsnam.org/docs/manual/html/working-with-cmake.html" target="_blank" rel="noopener noreferrer">4.3. Working with CMake</a></li><li><a href="https://github.com/microsoft/vscode-cmake-tools/blob/main/docs/cmake-settings.md" target="_blank" rel="noopener noreferrer">Configure CMake Tools settings</a></li><li><a href="https://blog.csdn.net/Strengthennn/article/details/136661436" target="_blank" rel="noopener noreferrer">[vscode]使用cmake时将命令行参数传递给调试目标</a></li></ol>',56))])}const L=S(j,[["render",H],["__file","How-to-start-with-vscode.html.vue"]]),D=JSON.parse('{"path":"/How-to-start-with-vscode.html","title":"How to start with Visual Studio Code","lang":"en-US","frontmatter":{"description":"How to start with Visual Studio Code Linux Solution Environment Ubuntu 22.04 Visual Studio Code 1.96.2 Install the requirements Install Visual Studio Code Follow the Ref. 2. Clo...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/ns-3-vanet-scratch/How-to-start-with-vscode.html"}],["meta",{"property":"og:site_name","content":"Docs"}],["meta",{"property":"og:title","content":"How to start with Visual Studio Code"}],["meta",{"property":"og:description","content":"How to start with Visual Studio Code Linux Solution Environment Ubuntu 22.04 Visual Studio Code 1.96.2 Install the requirements Install Visual Studio Code Follow the Ref. 2. Clo..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-01-09T09:34:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-09T09:34:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"How to start with Visual Studio Code\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-09T09:34:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fade\\",\\"url\\":\\"https://github.com/paigeman\\"}]}"]]},"headers":[{"level":2,"title":"Linux Solution","slug":"linux-solution","link":"#linux-solution","children":[{"level":3,"title":"Environment","slug":"environment","link":"#environment","children":[]},{"level":3,"title":"Install the requirements","slug":"install-the-requirements","link":"#install-the-requirements","children":[]},{"level":3,"title":"Install Visual Studio Code","slug":"install-visual-studio-code","link":"#install-visual-studio-code","children":[]},{"level":3,"title":"Clone ns-3 project","slug":"clone-ns-3-project","link":"#clone-ns-3-project","children":[]},{"level":3,"title":"Open Visual Studio Code and do some configurations","slug":"open-visual-studio-code-and-do-some-configurations","link":"#open-visual-studio-code-and-do-some-configurations","children":[]},{"level":3,"title":"Build the project","slug":"build-the-project","link":"#build-the-project","children":[]},{"level":3,"title":"Test ns-3","slug":"test-ns-3","link":"#test-ns-3","children":[]},{"level":3,"title":"Other configurations","slug":"other-configurations","link":"#other-configurations","children":[]},{"level":3,"title":"How to pass environment variables and program arguments to the program in Visual Studio Code while using CMake","slug":"how-to-pass-environment-variables-and-program-arguments-to-the-program-in-visual-studio-code-while-using-cmake","link":"#how-to-pass-environment-variables-and-program-arguments-to-the-program-in-visual-studio-code-while-using-cmake","children":[]},{"level":3,"title":"How to run or debug program","slug":"how-to-run-or-debug-program","link":"#how-to-run-or-debug-program","children":[]},{"level":3,"title":"References","slug":"references","link":"#references","children":[]}]}],"git":{"createdTime":1735465437000,"updatedTime":1736415246000,"contributors":[{"name":"paigeman","username":"paigeman","email":"53284808+paigeman@users.noreply.github.com","commits":7,"url":"https://github.com/paigeman"}]},"readingTime":{"minutes":1.86,"words":557},"filePathRelative":"How-to-start-with-vscode.md","localizedDate":"December 29, 2024","autoDesc":true}');export{L as comp,D as data};
