import{_ as n,a as o,b as d,c as r,d as h,e as p,f as c,g,h as u,i as k,j as m,k as v,l as b,m as y,n as _,o as C,p as f,q as A,r as F,s as x,t as z}from"./399165588-7c4a87a0-8132-4cdb-a530-fd1771d72d19-CPrw-Vvz.js";import{_ as S}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as V,a as s,b as t,d as l,e as a,f as B,r as w,o as q}from"./app-DQoRa6X_.js";const N={};function E(L,i){const e=w("RouteLink");return q(),V("div",null,[i[3]||(i[3]=s("h1",{id:"如何使用-visual-studio-code-进行开发",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#如何使用-visual-studio-code-进行开发"},[s("span",null,"如何使用 Visual Studio Code 进行开发")])],-1)),s("p",null,[t(e,{to:"/How-to-start-with-vscode.html"},{default:l(()=>i[0]||(i[0]=[a("[English]")])),_:1}),i[2]||(i[2]=a()),t(e,{to:"/zh/How-to-use-this-repo_zh_CN.html"},{default:l(()=>i[1]||(i[1]=[a("[下一篇]")])),_:1})]),i[4]||(i[4]=B(`<h2 id="linux-解决方案" tabindex="-1"><a class="header-anchor" href="#linux-解决方案"><span>Linux 解决方案</span></a></h2><h3 id="环境" tabindex="-1"><a class="header-anchor" href="#环境"><span>环境</span></a></h3><p>Ubuntu 22.04</p><p>Visual Studio Code 1.96.2</p><h3 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cmake</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ninja-build</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="安装-visual-studio-code" tabindex="-1"><a class="header-anchor" href="#安装-visual-studio-code"><span>安装 Visual Studio Code</span></a></h3><p>跟随参考文献2照着做即可。</p><h3 id="下载-ns-3-仓库" tabindex="-1"><a class="header-anchor" href="#下载-ns-3-仓库"><span>下载 ns-3 仓库</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clone</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> https://gitlab.com/nsnam/ns-3-dev.git</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="打开-visual-studio-code-并进行配置" tabindex="-1"><a class="header-anchor" href="#打开-visual-studio-code-并进行配置"><span>打开 Visual Studio Code 并进行配置</span></a></h3><p>安装一些插件：</p><p><img src="`+n+'" alt="image" loading="lazy"></p><p><img src="'+o+'" alt="image" loading="lazy"></p><p><img src="'+d+'" alt="image" loading="lazy"></p><p>用 Visual Studio Code 打开 ns-3 的项目并配置它。</p><p>按 <code>Ctrl+shift+P</code> 键并选择：</p><p><img src="'+r+'" alt="image" loading="lazy"></p><p>选择你电脑上存在的工具链：</p><p><img src="'+h+'" alt="image" loading="lazy"></p><p>然后你可以看到 CMake 开始工作。</p><p><img src="'+p+'" alt="image" loading="lazy"></p><p>为了看到一些输出，设置 CMAKE_BUILD_TYPE 的值为 Debug ：</p><p><img src="'+c+'" alt="image" loading="lazy"></p><p>按 <code>Ctrl+shift+P</code> 键并选择：</p><p><img src="'+g+'" alt="image" loading="lazy"></p><p>为了构建官方示例，设置 NS3_EXAMPLES 的值为 ON ：</p><p><img src="'+u+'" alt="image" loading="lazy"></p><h3 id="构建项目" tabindex="-1"><a class="header-anchor" href="#构建项目"><span>构建项目</span></a></h3><p><img src="'+k+'" alt="image" loading="lazy"></p><h3 id="测试-ns-3" tabindex="-1"><a class="header-anchor" href="#测试-ns-3"><span>测试 ns-3</span></a></h3><p>打开 <code>examples/tutorial/first.cc</code> 并运行：</p><p><img src="'+m+'" alt="image" loading="lazy"></p><p><img src="'+v+'" alt="image" loading="lazy"></p><h3 id="其它配置" tabindex="-1"><a class="header-anchor" href="#其它配置"><span>其它配置</span></a></h3><p>Visual Studio Code 原来的 C/C++ IntelliSense engine 效果并不好。我们可以使用 clangd 插件作为代替。</p><p><img src="'+b+'" alt="image" loading="lazy"></p><p>你需要确保你的系统上安装了 clangd 。如果没有请尝试：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -y</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> clangd</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后禁用原来的 Visual Studio Code C/C++ IntelliSense engine ：</p><p><img src="'+y+'" alt="image" loading="lazy"></p><p><img src="'+_+'" alt="image" loading="lazy"></p><p>ns-3 官方提供了编码风格，你可以安装以下插件来启用并在设置里开启保存时格式化：</p><p><img src="'+C+'" alt="image" loading="lazy"></p><p><img src="'+f+'" alt="image" loading="lazy"></p><p><img src="'+A+'" alt="image" loading="lazy"></p><p>但是如果同时安装了 <code>clangd</code> 和 <code>Clang-Format</code> ，可能会出现 formatter 无法正常工作的情况，因为这里有两个 formatter 。这里可以选择一个默认的 formatter ：</p><p><img src="'+F+`" alt="image" loading="lazy"></p><h3 id="在使用-cmake-时如何在-visual-studio-code-里传递环境变量和程序参数给程序" tabindex="-1"><a class="header-anchor" href="#在使用-cmake-时如何在-visual-studio-code-里传递环境变量和程序参数给程序"><span>在使用 CMake 时如何在 Visual Studio Code 里传递环境变量和程序参数给程序</span></a></h3><p>往 <code>.vscode/settings.json</code> 里添加以下配置：</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cmake.debugConfig&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;args&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--traceFile=/home/h3c/ns-3-dev/scratch/ns-3-vanet-scratch/area1ns2mobility.tcl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--configFile=/home/h3c/ns-3-dev/scratch/ns-3-vanet-scratch/area1ns2config.tcl&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">            &quot;--rsuNum=4&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ],</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;cmake.environment&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;NS_LOG&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;experiment=debug:VehicleApp=debug:RsuApp=debug&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><img src="`+x+'" alt="image" loading="lazy"></p><h3 id="如何运行或调试程序" tabindex="-1"><a class="header-anchor" href="#如何运行或调试程序"><span>如何运行或调试程序</span></a></h3><p><img src="'+z+'" alt="image" loading="lazy"></p><h3 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献"><span>参考文献</span></a></h3><ol><li><a href="https://www.nsnam.org/docs/release/3.42/installation/html/linux.html" target="_blank" rel="noopener noreferrer">4. Linux</a></li><li><a href="https://blog.csdn.net/u010044182/article/details/128977610" target="_blank" rel="noopener noreferrer">Ubuntu 22.04安装Visual Studio Code(VS Code)</a></li><li><a href="https://stackoverflow.com/questions/73328916/how-to-set-cmake-build-configuration-in-vscode" target="_blank" rel="noopener noreferrer">How to set CMake build configuration in VSCode?</a></li><li><a href="https://blog.csdn.net/qq_42764906/article/details/135541847" target="_blank" rel="noopener noreferrer">关于在Vscode安装clangd的教程（分别在linux和windows）[很详细，很细节，很全！]【Windows端：缺少 language enginee的解决方法】</a></li><li><a href="https://www.nsnam.org/docs/manual/html/working-with-cmake.html" target="_blank" rel="noopener noreferrer">4.3. Working with CMake</a></li><li><a href="https://github.com/microsoft/vscode-cmake-tools/blob/main/docs/cmake-settings.md" target="_blank" rel="noopener noreferrer">Configure CMake Tools settings</a></li><li><a href="https://blog.csdn.net/Strengthennn/article/details/136661436" target="_blank" rel="noopener noreferrer">[vscode]使用cmake时将命令行参数传递给调试目标</a></li></ol>',56))])}const j=S(N,[["render",E],["__file","How-to-start-with-vscode_zh_CN.html.vue"]]),D=JSON.parse('{"path":"/zh/How-to-start-with-vscode_zh_CN.html","title":"如何使用 Visual Studio Code 进行开发","lang":"zh-CN","frontmatter":{"description":"如何使用 Visual Studio Code 进行开发 Linux 解决方案 环境 Ubuntu 22.04 Visual Studio Code 1.96.2 安装依赖 安装 Visual Studio Code 跟随参考文献2照着做即可。 下载 ns-3 仓库 打开 Visual Studio Code 并进行配置 安装一些插件： image i...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/ns-3-vanet-scratch/zh/How-to-start-with-vscode_zh_CN.html"}],["meta",{"property":"og:site_name","content":"文档"}],["meta",{"property":"og:title","content":"如何使用 Visual Studio Code 进行开发"}],["meta",{"property":"og:description","content":"如何使用 Visual Studio Code 进行开发 Linux 解决方案 环境 Ubuntu 22.04 Visual Studio Code 1.96.2 安装依赖 安装 Visual Studio Code 跟随参考文献2照着做即可。 下载 ns-3 仓库 打开 Visual Studio Code 并进行配置 安装一些插件： image i..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-09T09:34:06.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-09T09:34:06.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"如何使用 Visual Studio Code 进行开发\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-09T09:34:06.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"fade\\",\\"url\\":\\"https://github.com/paigeman\\"}]}"]]},"headers":[{"level":2,"title":"Linux 解决方案","slug":"linux-解决方案","link":"#linux-解决方案","children":[{"level":3,"title":"环境","slug":"环境","link":"#环境","children":[]},{"level":3,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":3,"title":"安装 Visual Studio Code","slug":"安装-visual-studio-code","link":"#安装-visual-studio-code","children":[]},{"level":3,"title":"下载 ns-3 仓库","slug":"下载-ns-3-仓库","link":"#下载-ns-3-仓库","children":[]},{"level":3,"title":"打开 Visual Studio Code 并进行配置","slug":"打开-visual-studio-code-并进行配置","link":"#打开-visual-studio-code-并进行配置","children":[]},{"level":3,"title":"构建项目","slug":"构建项目","link":"#构建项目","children":[]},{"level":3,"title":"测试 ns-3","slug":"测试-ns-3","link":"#测试-ns-3","children":[]},{"level":3,"title":"其它配置","slug":"其它配置","link":"#其它配置","children":[]},{"level":3,"title":"在使用 CMake 时如何在 Visual Studio Code 里传递环境变量和程序参数给程序","slug":"在使用-cmake-时如何在-visual-studio-code-里传递环境变量和程序参数给程序","link":"#在使用-cmake-时如何在-visual-studio-code-里传递环境变量和程序参数给程序","children":[]},{"level":3,"title":"如何运行或调试程序","slug":"如何运行或调试程序","link":"#如何运行或调试程序","children":[]},{"level":3,"title":"参考文献","slug":"参考文献","link":"#参考文献","children":[]}]}],"git":{"createdTime":1735465437000,"updatedTime":1736415246000,"contributors":[{"name":"paigeman","username":"paigeman","email":"53284808+paigeman@users.noreply.github.com","commits":6,"url":"https://github.com/paigeman"}]},"readingTime":{"minutes":2.28,"words":684},"filePathRelative":"zh/How-to-start-with-vscode_zh_CN.md","localizedDate":"2024年12月29日","autoDesc":true}');export{j as comp,D as data};
